security:

    # hom passwords are encoded
    encoders:
        App\Entity\User\User:
            algorithm: argon2i

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        # internal name of the provider underneath
        app_user_provider:
            #type of provider loading it from the database
            entity:
                class: App\Entity\User\User
                property: username

    firewalls:

        # one fireWall by request, first match based on the pattern
        # developer things that doesnt need firewall
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # login jwt
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                require_previous_session: false
                provider:                 app_user_provider
                check_path:               api_login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html



    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
