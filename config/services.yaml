# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    profile_picture.uri_prefix: '/images/profilePictures'
    picture.uri_prefix: '/images/pictures/'
    authentication.refreshToken.expiration: 2592000

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.jwt_token_authenticator:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.
        class: App\Security\Guard\JWTTokenAuthenticator
        parent: lexik_jwt_authentication.security.guard.jwt_token_authenticator

    app.event.jwt_created_listener:
        class: App\EventListener\Authentication\JWTCreatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    acme_api.event.authentication_success_listener:
        class: App\EventListener\Authentication\JWTAuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
        arguments: [ '%authentication.refreshToken.expiration%']

    App\EventListener\Profile\SuccessListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }

    App\EventListener\Activity\ActivityParticipationListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist, method: postPersist }
            - { name: doctrine.event_listener, event: postUpdate, method: postUpdate }
